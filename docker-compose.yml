name: grafana-intro-to-mltp
volumes:
  grafana:
services:
  # Grafana Alloy batches and processes traces sent to it, generating
  # auto-logs from those traces.
  # Includes Metrics, Logs, Traces and Profiles.
  alloy:
    image: grafana/alloy:v1.3.1
    ports:
      - "12347:12345"
      - "12348:12348"
      - "6832:6832"
      - "4317:4317"
      - "4318:4318"
      - "55679:55679"
    volumes:
      - "./alloy/config.alloy:/etc/alloy/config.alloy"
      - "./alloy/endpoints.json:/etc/alloy/endpoints.json"
      - "/mnt/storage/alloy/data:/data-alloy"
    command: [
      "run",
      "--server.http.listen-addr=0.0.0.0:12345",
      "--stability.level=public-preview",
      "/etc/alloy/config.alloy",
    ]

  # The opentelemetry-collector batches and processes traces sent to it.
  # opentelemetry-collector:
  #   image: otel/opentelemetry-collector-contrib
  #   ports:
  #     - "12347:12345"
  #     - "12348:12348"
  #     - "6832:6832"
  #     - "55679:55679"
  #   volumes:
  #     - ./otel/otel.yml:/etc/otel-collector-config.yml
  #   command: ["--config=/etc/otel-collector-config.yml"]

  # The Grafana dashboarding server.
  grafana:
    image: grafana/grafana:11.1.4
    volumes:
      - "./grafana/definitions:/var/lib/grafana/dashboards"
      - "./grafana/provisioning:/etc/grafana/provisioning"
      - "/mnt/storage/grafana/data:/var/lib/grafana"
    ports:
      - "3000:3000"
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph traceqlSearch traceQLStreaming correlations metricsSummary traceqlEditor traceToMetrics traceToProfiles datatrails
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true

  # The Tempo service stores traces send to it by Grafana Alloy, and takes
  # queries from Grafana to visualise those traces.
  tempo:
    image: grafana/tempo:2.5.0
    ports:
      - "3200:3200"
      - "9411:9411"
      - "55680:55680"
      - "55681:55681"
      - "14250:14250"
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - "./tempo/tempo.yaml:/etc/tempo.yaml"
      - "/mnt/storage/tempo/data:/tmp/tempo"

  # The Loki service stores logs sent to it, and takes queries from Grafana
  # to visualise those logs.
  loki:
    image: grafana/loki:3.1.1
    command: ["--pattern-ingester.enabled=true", "-config.file=/etc/loki/loki.yaml"]
    ports:
      - "3100:3100"
    volumes:
      - "./loki/loki.yaml:/etc/loki/loki.yaml"
      - "/mnt/storage/loki/data:/loki"

  mimir:
    image: grafana/mimir:2.13.0
    command: ["-ingester.native-histograms-ingestion-enabled=true", "-config.file=/etc/mimir.yaml"]
    ports:
      - "9009:9009"
    volumes:
      - "./mimir/mimir.yaml:/etc/mimir.yaml"
      - "/mnt/storage/mimir/data:/tmp/mimir"

  k6:
    image: grafana/k6
    volumes:
      - "./k6:/scripts"
    profiles: ["dev"] # only runs with dev profile
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://mimir:9009/api/v1/push
      - K6_DURATION=3600s
      - K6_VUS=4
      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
    restart: no
    command: ["run", "-o", "experimental-prometheus-rw", "/scripts/mythical-loadtest.js"]

  pyroscope:
    image: grafana/pyroscope:1.7.1
    ports:
      - "4040:4040"
    command: ["server"]
